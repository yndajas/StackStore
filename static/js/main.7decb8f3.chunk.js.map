{"version":3,"sources":["components/header/LogOutButton.js","actions/logOut.js","components/header/Header.js","components/main/home/LogInInput.js","actions/logIn.js","helpers/getBackendUrl.js","components/main/home/Home.js","components/main/About.js","helpers/rekeySavedQuestionData.js","helpers/sortAnswers.js","helpers/sortTags.js","helpers/sortQuestions.js","helpers/processSavedQuestionsData.js","actions/clearQuestions.js","helpers/formatDate.js","components/main/QuestionData.js","components/main/AnswerData.js","helpers/processSavedQuestionData.js","components/main/search/SaveQuestionButton.js","actions/saveQuestion.js","components/main/search/SearchResultCardBody.js","components/main/savedQuestions/NotesParagraph.js","helpers/formatTags.js","components/main/savedQuestions/TagsParagraph.js","components/main/savedQuestions/EditQuestionLinkButton.js","components/main/savedQuestions/SavedQuestionCardBody.js","components/main/QuestionCard.js","components/main/savedQuestions/SavedQuestionsAccordion.js","components/main/savedQuestions/SavedQuestions.js","actions/fetchSavedQuestions.js","actions/updateQuestion.js","components/main/editQuestion/EditNotesInput.js","components/main/editQuestion/EditTagsInput.js","helpers/rekeyExternalQuestionData.js","components/main/editQuestion/UpdateQuestionDataButton.js","actions/updateQuestionFromExternalData.js","components/main/editQuestion/DeleteQuestionButton.js","actions/deleteQuestion.js","components/main/editQuestion/EditQuestion.js","actions/fetchSavedQuestion.js","actions/clearQuestion.js","components/main/tags/TagLinkButton.js","components/main/tags/Tags.js","actions/fetchSavedTags.js","helpers/rekeySavedTagData.js","actions/clearTags.js","components/main/tag/Tag.js","actions/fetchSavedTag.js","actions/clearTag.js","components/main/search/SearchInput.js","actions/searchQuestions.js","components/main/search/SearchResults.js","components/main/search/Search.js","actions/clearSearch.js","components/main/Main.js","components/footer/UserInfo.js","components/footer/Footer.js","App.js","index.js","reducers/rootReducer.js"],"names":["LogOutButton","name","className","onClick","this","props","logOut","React","Component","connect","dispatch","type","HeaderContainer","to","src","process","alt","title","id","user","state","LogInInput","email","password","handleChange","event","setState","target","value","handleSubmit","preventDefault","handleClick","register","logIn","onSubmit","placeholder","onChange","data","endpoint","fetch","headers","Accept","method","body","JSON","stringify","then","response","json","error","window","alert","payload","Home","document","About","class","frameborder","allow","allowfullscreen","href","rekeySavedQuestionData","question","allIncluded","included","filter","includedData","attributes","question_id","parseInt","answers","map","answer","answerData","stack_created","Date","parse","stack_updated","tags","question_tag","questionTagData","questionData","user_id","sortAnswersWithQuestion","sortedAnswers","sort","a","b","accepted","score","sortTags","text","sortTagsWithQuestion","sortedTags","sortQuestions","questions","answer_count","sortedQuestion","processSavedQuestionsData","rekeyedQuestions","clearQuestions","formatDate","date","Intl","DateTimeFormat","dateStyle","format","QuestionData","dangerouslySetInnerHTML","__html","stack_id","AnswerData","processSavedQuestionData","rekeyedQuestion","SaveQuestionButton","checkIfSavedOrUpdated","savedQuestions","savedQuestion","find","new","disabled","saveQuestion","token","processedQuestion","SearchResultCardBody","index","length","NotesParagraph","notes","formatTags","tag","join","TagsParagraph","EditQuestionLinkButton","SavedQuestionCardBody","QuestionCard","SavedQuestionsAccordion","SavedQuestions","fetchSavedQuestions","processedQuestions","updateQuestion","processedQuestionData","EditNotesInput","checkIfUnsavedChanges","EditTagsInput","prevProps","rekeyExternalQuestionData","externalQuestionData","externalAnswerData","answer_id","stack_question_id","is_accepted","creation_date","last_edit_date","last_activity_date","UpdateQuestionDataButton","updateQuestionFromExternalData","items","DeleteQuestionButton","deleteQuestion","EditQuestionContainer","fetchSavedQuestion","match","params","clearQuestion","deleted","questionId","TagLinkButton","slug","Tags","fetchSavedTags","clearTags","rekeyedTags","rekeySavedTagData","processedTags","Tag","fetchSavedTag","tagSlug","clearTag","SearchInput","query","searchQuestions","SearchResults","searchResults","searchResultsTotal","searchQuery","searchResult","Search","clearSearch","Main","AuthRoute","args","exact","path","component","EditQuesion","UserInfo","Footer","year","getFullYear","App","Header","persistConfig","key","storage","persistedReducer","persistReducer","action","total","newStateCS","newStateCQs","newStateCQ","newStateCTs","newStateCT","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","basename","getElementById"],"mappings":"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","file":"static/js/main.7decb8f3.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { logOut } from \"../../actions/logOut\";\n\nclass LogOutButton extends React.Component {\n  render() {\n    return (\n      <button\n        name=\"log-out\"\n        className=\"btn btn-primary\"\n        onClick={this.props.logOut}\n      >\n        Log out\n      </button>\n    );\n  }\n}\n\nexport default connect(null, { logOut })(LogOutButton);\n","export const logOut = () => {\n  return (dispatch) => {\n    dispatch({ type: \"LOG_OUT\" });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport LogOutButton from \"./LogOutButton\";\n\nclass HeaderContainer extends React.Component {\n  render() {\n    return (\n      <header>\n        <nav className=\"navbar navbar-expand-md navbar-light\">\n          <div className=\"container\">\n            <Link to=\"/\">\n              <img\n                src={process.env.PUBLIC_URL + \"/images/logo.png\"}\n                className=\"logo\"\n                alt=\"logo\"\n                title=\"StackStore logo\"\n              />\n            </Link>\n            <button\n              aria-controls=\"navbar\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navbar\"\n              data-toggle=\"collapse\"\n              type=\"button\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbar\">\n              <ul className=\"navbar-nav mr-auto mt-2\" id=\"nav-elements\">\n                {this.props.user ? (\n                  <>\n                    <li className=\"nav-item\">\n                      <Link to=\"/questions\" className=\"nav-link\">\n                        Questions\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link to=\"/tags\" className=\"nav-link\">\n                        Tags\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link to=\"/search\" className=\"nav-link\">\n                        Search\n                      </Link>\n                    </li>\n                  </>\n                ) : (\n                  <li className=\"nav-item\">\n                    <Link to=\"/about\" className=\"nav-link\">\n                      About\n                    </Link>\n                  </li>\n                )}\n              </ul>\n              <ul className=\"navbar-nav ml-auto mt-2\" id=\"log-out\">\n                {this.props.user ? <LogOutButton /> : \"\"}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(HeaderContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { logIn } from \"../../../actions/logIn\";\n\nclass LogInInput extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleClick = (event) => {\n    const register = event.target.name === \"register\";\n    this.props.logIn(this.state, register);\n  };\n\n  render() {\n    return (\n      <form id=\"log-in\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={this.state.email}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <button\n          name=\"log-in\"\n          className=\"btn btn-primary\"\n          onClick={this.handleClick}\n        >\n          Log in\n        </button>\n        <br />\n        <br />\n        <button\n          name=\"register\"\n          className=\"btn btn-success\"\n          onClick={this.handleClick}\n        >\n          Register\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default connect(null, { logIn })(LogInInput);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\n\nexport const logIn = (data, register) => {\n  const endpoint = [register ? \"users\" : \"sessions\"];\n\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/${endpoint}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          dispatch({ type: \"LOG_IN\", payload: json.user });\n        }\n      });\n  };\n};\n","export const getBackendUrl = () => {\n  switch (process.env.NODE_ENV) {\n    case \"development\":\n      return \"http://localhost:3000\";\n    case \"production\": // fall through\n    default:\n      return \"https://stackstore-backend.herokuapp.com\";\n  }\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport LogInInput from \"./LogInInput\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    document.title = \"StackStore\";\n  }\n\n  render() {\n    return (\n      <div id=\"home\">\n        <h2>Get started</h2>\n        <br />\n        <LogInInput />\n        <br />\n        <p>\n          <Link to=\"/about\">What is StackStore?</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nclass About extends React.Component {\n  componentDidMount() {\n    document.title = \"About - StackStore\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>What is StackStore?</h2>\n        <br />\n        <p>With StackStore, you can:</p>\n        <ul>\n          <li>search for Stack Overflow questions by title</li>\n          <li>view questions and answers</li>\n          <li>save questions to your own store</li>\n          <li>add tags and notes to questions and view questions by tag</li>\n        </ul>\n        <hr />\n        <h3>Demo (UPDATE URL)</h3>\n        <div class=\"embed-responsive embed-responsive-16by9 iframe_container\">\n          <iframe\n            title=\"YouTube demo\"\n            class=\"embed-responsive-item\"\n            src=\"https://www.youtube.com/embed/PYwX1QGj6os\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen=\"allowfullscreen\"\n          ></iframe>\n        </div>\n        <hr />\n        <h3>Creator and GitHub repository</h3>\n        <ul>\n          <li>\n            Ynda Jas (<a href=\"https://pronoun.is/they/.../themself\">they</a>):{\" \"}\n            <a href=\"https://github.com/yndajas\">GitHub</a> |{\" \"}\n            <a href=\"https://yndajas.co\">website</a>\n          </li>\n          <li>\n            <a href=\"https://github.com/yndajas/StackStore\">\n              GitHub repository\n            </a>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","const rekeyIncludedAnswerData = (answerData) => {\n  return {\n    id: answerData.id,\n    ...answerData.attributes,\n    stack_created: Date.parse(answerData.attributes.stack_created),\n    stack_updated: Date.parse(answerData.attributes.stack_updated),\n  };\n};\n\nconst rekeyIncludedTagData = (questionTagData) => {\n  return { id: questionTagData.id, ...questionTagData.attributes };\n};\n\nexport const rekeySavedQuestionData = (question, allIncluded) => {\n  const included = allIncluded.filter(\n    (includedData) =>\n      includedData.attributes.question_id === parseInt(question.id)\n  );\n\n  const answers = included\n    .filter((includedData) => includedData.type === \"answer\")\n    .map((answer) => rekeyIncludedAnswerData(answer));\n\n  const tags = included\n    .filter((includedData) => includedData.type === \"question_tag\")\n    .map((question_tag) => rekeyIncludedTagData(question_tag));\n\n  const questionData = {\n    id: question.id,\n    ...question.attributes,\n    stack_created: Date.parse(question.attributes.stack_created),\n    stack_updated: Date.parse(question.attributes.stack_updated),\n    answers: answers,\n    tags: tags,\n  };\n\n  delete questionData.user_id;\n\n  return questionData;\n};\n","export const sortAnswersWithQuestion = (question) => {\n  if (question.answers) {\n    const sortedAnswers = question.answers.sort((a, b) => {\n      if (a.accepted) {\n        return -1;\n      } else if (b.accepted) {\n        return 1;\n      } else {\n        return parseInt(b.score) - parseInt(a.score);\n      }\n    });\n\n    return { ...question, answers: sortedAnswers };\n  } else {\n    return question;\n  }\n};\n","export const sortTags = (tags) => {\n  return tags.sort((a, b) => {\n    if (a.text < b.text) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n};\n\nexport const sortTagsWithQuestion = (question) => {\n  if (question.tags) {\n    const sortedTags = sortTags(question.tags);\n    return { ...question, tags: sortedTags };\n  } else {\n    return question;\n  }\n};\n","import { sortAnswersWithQuestion } from \"./sortAnswers\";\nimport { sortTagsWithQuestion } from \"./sortTags\";\n\nexport const sortQuestions = (questions) => {\n  return questions\n    .sort((a, b) => parseInt(b.answer_count) - parseInt(a.answer_count))\n    .sort((a, b) => parseInt(b.score) - parseInt(a.score))\n    .map((sortedQuestion) =>\n      sortTagsWithQuestion(sortAnswersWithQuestion(sortedQuestion))\n    );\n};\n","import { rekeySavedQuestionData } from \"./rekeySavedQuestionData\";\nimport { sortQuestions } from \"./sortQuestions\";\n\nexport const processSavedQuestionsData = (json) => {\n  const rekeyedQuestions = json.data.map((question) =>\n    rekeySavedQuestionData(question, json.included || [])\n  );\n\n  return sortQuestions(rekeyedQuestions);\n};\n","export const clearQuestions = () => {\n  return (dispatch) => {\n    dispatch({ type: \"CLEAR_QUESTIONS\" });\n  };\n};\n","export const formatDate = (date) => {\n  return new Intl.DateTimeFormat(\"en-GB\", { dateStyle: \"long\" }).format(date);\n};\n","import { formatDate } from \"../../helpers/formatDate\";\n\nconst QuestionData = ({ question }) => {\n  return (\n    <div>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: question.body,\n        }}\n      />\n      <p>----</p>\n      <p>\n        Score: {question.score}\n        <br />\n        Last activity: {formatDate(question.stack_updated)}\n        <br />\n        Created: {formatDate(question.stack_created)}\n        <br />\n        <a\n          href={`https://stackoverflow.com/q/${question.stack_id}`}\n          title=\"View question on Stack Overflow\"\n        >\n          View question on Stack Overflow\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default QuestionData;\n","import { formatDate } from \"../../helpers/formatDate\";\n\nconst AnswerData = ({ answer }) => {\n  return (\n    <div>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: answer.body,\n        }}\n      />\n      <p>----</p>\n      <p>\n        {answer.accepted ? (\n          <>\n            <b>Accepted</b>\n            <br />\n          </>\n        ) : (\n          \"\"\n        )}\n        Score: {answer.score}\n        <br />\n        {answer.stack_updated ? (\n          <>\n            Updated: {formatDate(answer.stack_updated)}\n            <br />\n          </>\n        ) : (\n          \"\"\n        )}\n        Created: {formatDate(answer.stack_created)}\n        <br />\n        <a\n          href={`https://stackoverflow.com/a/${answer.stack_id}`}\n          title=\"View answer on Stack Overflow\"\n        >\n          View answer on Stack Overflow\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default AnswerData;\n","import { rekeySavedQuestionData } from \"./rekeySavedQuestionData\";\nimport { sortAnswersWithQuestion } from \"./sortAnswers\";\nimport { sortTagsWithQuestion } from \"./sortTags\";\n\nexport const processSavedQuestionData = (json) => {\n  const rekeyedQuestion = rekeySavedQuestionData(\n    json.data,\n    json.included || []\n  );\n\n  return sortTagsWithQuestion(sortAnswersWithQuestion(rekeyedQuestion));\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { saveQuestion } from \"../../../actions/saveQuestion\";\n\nclass SaveQuestionButton extends React.Component {\n  render() {\n    const checkIfSavedOrUpdated = () => {\n      if (this.props.savedQuestions) {\n        let savedQuestion = this.props.savedQuestions.find(\n          (savedQuestion) =>\n            savedQuestion.stack_id === this.props.question.stack_id\n        );\n\n        if (savedQuestion) {\n          if (savedQuestion.new) {\n            return \"Saved\";\n          } else {\n            return \"Updated\";\n          }\n        }\n      } else {\n        return false;\n      }\n    };\n\n    return (\n      <button\n        disabled={!!checkIfSavedOrUpdated()}\n        name=\"save-question\"\n        className=\"btn btn-success\"\n        onClick={() =>\n          this.props.saveQuestion(this.props.user, this.props.question)\n        }\n      >\n        {checkIfSavedOrUpdated() || \"Save question\"}\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    savedQuestions: state.savedQuestions,\n  };\n};\n\nexport default connect(mapStateToProps, { saveQuestion })(SaveQuestionButton);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\nimport { processSavedQuestionData } from \"../helpers/processSavedQuestionData\";\n\nexport const saveQuestion = (user, question) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/questions`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        token: user.token,\n      },\n      method: \"POST\",\n      body: JSON.stringify(question),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          const processedQuestion = processSavedQuestionData(json);\n\n          processedQuestion.new = json.new;\n\n          dispatch({ type: \"SAVE_QUESTION\", payload: processedQuestion });\n        }\n      });\n  };\n};\n","import QuestionData from \"../QuestionData\";\nimport AnswerData from \"../AnswerData\";\nimport SaveQuestionButton from \"./SaveQuestionButton\";\n\nconst SearchResultCardBody = ({ question }) => {\n  return (\n    <div className=\"card-body\">\n      <QuestionData question={question} />\n      <hr />\n      <h3>Answers</h3>\n      {question.answers ? (\n        question.answers.map((answer, index) => (\n          <>\n            <AnswerData answer={answer} />\n            {index < question.answers.length - 1 ? <hr /> : \"\"}\n          </>\n        ))\n      ) : (\n        <p>No answers</p>\n      )}\n      <SaveQuestionButton question={question} />\n    </div>\n  );\n};\n\nexport default SearchResultCardBody;\n","const NotesParagraph = ({ question }) => {\n  return (\n    <>\n      {question.notes && question.notes.length > 0 ? (\n        <p className=\"notes\">\n          <b>Notes</b>\n          <br />\n          {question.notes}\n        </p>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default NotesParagraph;\n","export const formatTags = (tags) => {\n  return tags.map((tag) => tag.text).join(\", \");\n};\n","import { formatTags } from \"../../../helpers/formatTags\";\n\nconst TagsParagraph = ({ question }) => {\n  return (\n    <>\n      {question.tags.length > 0 ? (\n        <p>\n          <b>Tags: </b>\n          {formatTags(question.tags)}\n        </p>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default TagsParagraph;\n","import { Link } from \"react-router-dom\";\n\nconst EditQuestionLinkButton = ({ question }) => {\n  return (\n    <Link to={`/questions/${question.id}/edit`}>\n      <button name=\"edit-question\" className=\"btn btn-primary\">\n        Edit question*\n      </button>\n    </Link>\n  );\n};\n\nexport default EditQuestionLinkButton;\n","import NotesParagraph from \"./NotesParagraph\";\nimport TagsParagraph from \"./TagsParagraph\";\nimport EditQuestionLinkButton from \"./EditQuestionLinkButton\";\nimport QuestionData from \"../QuestionData\";\nimport AnswerData from \"../AnswerData\";\n\nconst SavedQuestionCardBody = ({ question }) => {\n  return (\n    <div className=\"card-body\">\n      <NotesParagraph question={question} />\n      <TagsParagraph question={question} />\n      <EditQuestionLinkButton question={question} />\n      <hr />\n      <QuestionData question={question} />\n      <hr />\n      <h3>Answers</h3>\n      {question.answers && question.answers.length > 0\n        ? question.answers.map((answer, index) => (\n            <>\n              <AnswerData answer={answer} />\n              {index < question.answers.length - 1 ? <hr /> : \"\"}\n            </>\n          ))\n        : \"No answers\"}\n    </div>\n  );\n};\n\nexport default SavedQuestionCardBody;\n","import SearchResultCardBody from \"./search/SearchResultCardBody\";\nimport SavedQuestionCardBody from \"./savedQuestions/SavedQuestionCardBody\";\n\nconst QuestionCard = ({ question, type }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\" id={`heading${question.stack_id}`}>\n        <button\n          className=\"btn\"\n          data-toggle=\"collapse\"\n          data-target={`#collapse${question.stack_id}`}\n          aria-expanded=\"false\"\n          aria-controls={`collapse${question.stack_id}`}\n          dangerouslySetInnerHTML={{\n            __html: question.title,\n          }}\n        />\n      </div>\n      <div\n        className=\"collapse\"\n        id={`collapse${question.stack_id}`}\n        aria-labelledby={`heading${question.stack_id}`}\n        data-parent=\"#accordion\"\n      >\n        {type === \"search\" ? (\n          <SearchResultCardBody question={question} />\n        ) : (\n          <SavedQuestionCardBody question={question} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionCard;\n","import QuestionCard from \"../QuestionCard\";\n\nconst SavedQuestionsAccordion = ({ questions }) => {\n  return (\n    <>\n      <div id=\"accordion\">\n        {questions.map((question) => (\n          <QuestionCard question={question} type={\"saved\"} />\n        ))}\n      </div>\n      <br />\n      <p>\n        <i>\n          * add/edit notes and tags, update question and answer data or delete\n          the question\n        </i>\n      </p>\n    </>\n  );\n};\n\nexport default SavedQuestionsAccordion;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchSavedQuestions } from \"../../../actions/fetchSavedQuestions\";\nimport { clearQuestions } from \"../../../actions/clearQuestions\";\nimport SavedQuestionsAccordion from \"./SavedQuestionsAccordion\";\n\nclass SavedQuestions extends React.Component {\n  componentDidMount() {\n    document.title = \"Questions - StackStore\";\n    this.props.fetchSavedQuestions(this.props.user);\n  }\n\n  componentWillUnmount() {\n    this.props.clearQuestions();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Saved questions</h2>\n        {this.props.questions && this.props.questions.length > 0 ? (\n          <SavedQuestionsAccordion questions={this.props.questions} />\n        ) : (\n          \"Loading or no saved questions\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    questions: state.questions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSavedQuestions,\n  clearQuestions,\n})(SavedQuestions);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\nimport { processSavedQuestionsData } from \"../helpers/processSavedQuestionsData\";\n\nexport const fetchSavedQuestions = (user) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/questions`, {\n      method: \"GET\",\n      headers: {\n        token: user.token,\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          const processedQuestions = processSavedQuestionsData(json);\n\n          dispatch({\n            type: \"FETCH_SAVED_QUESTIONS\",\n            payload: processedQuestions,\n          });\n        }\n      });\n  };\n};\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\nimport { processSavedQuestionData } from \"../helpers/processSavedQuestionData\";\n\nexport const updateQuestion = (user, question) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/questions/${question.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        token: user.token,\n      },\n      method: \"PATCH\",\n      body: JSON.stringify(question),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          const processedQuestionData = processSavedQuestionData(json);\n\n          dispatch({ type: \"UPDATE_QUESTION\", payload: processedQuestionData });\n        }\n      });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateQuestion } from \"../../../actions/updateQuestion\";\n\nclass EditNotesInput extends React.Component {\n  state = {\n    notes: this.props.question.notes,\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleClick = () => {\n    this.props.updateQuestion(this.props.user, {\n      id: this.props.question.id,\n      notes: this.state.notes,\n    });\n  };\n\n  render() {\n    const checkIfUnsavedChanges = () => {\n      return this.props.question.notes !== this.state.notes;\n    };\n\n    return (\n      <form id=\"edit-notes\" onSubmit={this.handleSubmit}>\n        <textarea\n          name=\"notes\"\n          value={this.state.notes}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <button\n          disabled={!checkIfUnsavedChanges()}\n          name=\"save-notes\"\n          className=\"btn btn-success\"\n          onClick={this.handleClick}\n        >\n          {checkIfUnsavedChanges() ? \"Save\" : \"Saved\"}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, { updateQuestion })(EditNotesInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateQuestion } from \"../../../actions/updateQuestion\";\nimport { formatTags } from \"../../../helpers/formatTags\";\n\nclass EditTagsInput extends React.Component {\n  state = {\n    tags: formatTags(this.props.question.tags),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      formatTags(prevProps.question.tags) !==\n      formatTags(this.props.question.tags)\n    ) {\n      this.setState({ tags: formatTags(this.props.question.tags) });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleClick = () => {\n    this.props.updateQuestion(this.props.user, {\n      id: this.props.question.id,\n      tags: this.state.tags,\n    });\n  };\n\n  render() {\n    const checkIfUnsavedChanges = () => {\n      return formatTags(this.props.question.tags) !== this.state.tags;\n    };\n\n    return (\n      <form id=\"edit-tags\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"tags\"\n          value={this.state.tags}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <button\n          disabled={!checkIfUnsavedChanges()}\n          name=\"save-tags\"\n          className=\"btn btn-success\"\n          onClick={this.handleClick}\n        >\n          {checkIfUnsavedChanges() ? \"Save\" : \"Saved\"}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, { updateQuestion })(EditTagsInput);\n","const rekeyedExternalAnswerData = (externalAnswerData) => {\n  return {\n    stack_id: externalAnswerData.answer_id,\n    stack_question_id: externalAnswerData.question_id,\n    accepted: externalAnswerData.is_accepted,\n    score: externalAnswerData.score,\n    body: externalAnswerData.body,\n    stack_created: externalAnswerData.creation_date * 1000,\n    stack_updated: externalAnswerData.last_edit_date * 1000 || null,\n  };\n};\n\nexport const rekeyExternalQuestionData = (externalQuestionData) => {\n  const answers = externalQuestionData.answers\n    ? externalQuestionData.answers.map((answer) =>\n        rekeyedExternalAnswerData(answer)\n      )\n    : null;\n\n  return {\n    stack_id: externalQuestionData.question_id,\n    score: externalQuestionData.score,\n    title: externalQuestionData.title,\n    body: externalQuestionData.body,\n    stack_created: externalQuestionData.creation_date * 1000,\n    stack_updated: externalQuestionData.last_activity_date * 1000,\n    answers: answers,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateQuestionFromExternalData } from \"../../../actions/updateQuestionFromExternalData\";\n\nclass UpdateQuestionDataButton extends React.Component {\n  render() {\n    return (\n      <button\n        name=\"update-question-data\"\n        className=\"btn btn-success\"\n        onClick={() =>\n          this.props.updateQuestionFromExternalData(\n            this.props.user,\n            this.props.question\n          )\n        }\n      >\n        Update question data\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, { updateQuestionFromExternalData })(\n  UpdateQuestionDataButton\n);\n","import { rekeyExternalQuestionData } from \"../helpers/rekeyExternalQuestionData\";\nimport { sortAnswersWithQuestion } from \"../helpers/sortAnswers\";\nimport { updateQuestion } from \"./updateQuestion\";\n\nexport const updateQuestionFromExternalData = (user, question) => {\n  return (dispatch) => {\n    fetch(\n      `https://api.stackexchange.com/2.3/questions/${question.stack_id}?order=desc&sort=activity&site=stackoverflow&filter=!FyMx1JbYiY93N3*4)4pJ0SHrESnSXd7e0oDq2L`\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        const rekeyedQuestion = rekeyExternalQuestionData(json.items[0]);\n\n        const processedQuestion = sortAnswersWithQuestion(rekeyedQuestion);\n\n        processedQuestion.id = question.id;\n\n        dispatch(updateQuestion(user, processedQuestion));\n      });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { deleteQuestion } from \"../../../actions/deleteQuestion\";\n\nclass DeleteQuestionButton extends React.Component {\n  render() {\n    return (\n      <button\n        name=\"delete-question\"\n        className=\"btn btn-danger\"\n        onClick={() =>\n          this.props.deleteQuestion(this.props.user, this.props.question)\n        }\n      >\n        Delete question\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, { deleteQuestion })(\n  DeleteQuestionButton\n);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\n\nexport const deleteQuestion = (user, question) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/questions/${question.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        token: user.token,\n      },\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          dispatch({ type: \"DELETE_QUESTION\" });\n        }\n      });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nimport { fetchSavedQuestion } from \"../../../actions/fetchSavedQuestion\";\nimport { clearQuestion } from \"../../../actions/clearQuestion\";\nimport EditNotesInput from \"./EditNotesInput\";\nimport EditTagsInput from \"./EditTagsInput\";\nimport UpdateQuestionDataButton from \"./UpdateQuestionDataButton\";\nimport DeleteQuestionButton from \"./DeleteQuestionButton\";\nimport QuestionData from \"../QuestionData\";\nimport AnswerData from \"../AnswerData\";\n\nclass EditQuestionContainer extends React.Component {\n  componentDidMount() {\n    document.title = \"Edit question - StackStore\";\n    this.props.fetchSavedQuestion(this.props.user, this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.clearQuestion();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.question ? (\n          this.props.question.deleted ? (\n            <Redirect to=\"/questions\" />\n          ) : (\n            <>\n              <h2>Edit question</h2>\n              <h3>Notes</h3>\n              <EditNotesInput question={this.props.question} />\n              <hr />\n              <h3>Tags</h3>\n              <p>Add tags in a comma-separated list</p>\n              <EditTagsInput question={this.props.question} />\n              <hr />\n              <h3>Question data</h3>\n              <p>Update question and answer data from Stack Overflow</p>\n              <UpdateQuestionDataButton question={this.props.question} />\n              <br />\n              <br />\n              <h4>{this.props.question.title}</h4>\n              <QuestionData question={this.props.question} />\n              <hr />\n              <h4>Answers</h4>\n              {this.props.question.answers &&\n              this.props.question.answers.length > 0\n                ? this.props.question.answers.map((answer, index) => (\n                    <>\n                      <AnswerData answer={answer} />\n                      {index < this.props.question.answers.length - 1 ? (\n                        <hr />\n                      ) : (\n                        \"\"\n                      )}\n                    </>\n                  ))\n                : \"No answers\"}\n              <hr />\n              <h3>Delete question</h3>\n              <p>\n                If you delete a question, you can save it again via the search\n                feature, however all notes and tags will be lost permanently\n              </p>\n              <DeleteQuestionButton question={this.props.question} />\n            </>\n          )\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    question: state.question,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSavedQuestion,\n  clearQuestion,\n})(EditQuestionContainer);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\nimport { processSavedQuestionData } from \"../helpers/processSavedQuestionData\";\n\nexport const fetchSavedQuestion = (user, questionId) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/questions/${questionId}`, {\n      method: \"GET\",\n      headers: {\n        token: user.token,\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          const processedQuestion = processSavedQuestionData(json);\n\n          dispatch({\n            type: \"FETCH_SAVED_QUESTION\",\n            payload: processedQuestion,\n          });\n        }\n      });\n  };\n};\n","export const clearQuestion = () => {\n  return (dispatch) => {\n    dispatch({ type: \"CLEAR_QUESTION\" });\n  };\n};\n","import { Link } from \"react-router-dom\";\n\nconst TagLinkButton = ({ tag }) => {\n  return (\n    <Link to={`/tags/${tag.slug}`}>\n      <button name={`${tag.text}-link`} className=\"btn btn-primary\">\n        {tag.text}\n      </button>\n    </Link>\n  );\n};\n\nexport default TagLinkButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport TagLinkButton from \"./TagLinkButton\";\nimport { fetchSavedTags } from \"../../../actions/fetchSavedTags\";\nimport { clearTags } from \"../../../actions/clearTags\";\n\nclass Tags extends React.Component {\n  componentDidMount() {\n    document.title = \"Tags - StackStore\";\n    this.props.fetchSavedTags(this.props.user);\n  }\n\n  componentWillUnmount() {\n    this.props.clearTags();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Tags</h2>\n        {this.props.tags ? (\n          <>\n            <p>View questions by tag</p>\n            <div id=\"tag-link-buttons\">\n              {this.props.tags.map((tag, index) => (\n                <>\n                  <TagLinkButton tag={tag} />\n                  {index < this.props.tags.length - 1 ? <>&nbsp;</> : \"\"}\n                </>\n              ))}\n            </div>\n          </>\n        ) : (\n          \"No saved tags\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    tags: state.tags,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchSavedTags, clearTags })(Tags);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\nimport { rekeySavedTagData } from \"../helpers/rekeySavedTagData\";\nimport { sortTags } from \"../helpers/sortTags\";\n\nexport const fetchSavedTags = (user) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/tags`, {\n      method: \"GET\",\n      headers: {\n        token: user.token,\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          const rekeyedTags = json.data.map((tag) => rekeySavedTagData(tag));\n\n          const processedTags = sortTags(rekeyedTags);\n\n          dispatch({ type: \"FETCH_SAVED_TAGS\", payload: processedTags });\n        }\n      });\n  };\n};\n","export const rekeySavedTagData = (tag) => {\n  return { id: tag.id, ...tag.attributes };\n};\n","export const clearTags = () => {\n  return (dispatch) => {\n    dispatch({ type: \"CLEAR_TAGS\" });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport SavedQuestionsAccordion from \"../savedQuestions/SavedQuestionsAccordion\";\nimport { fetchSavedTag } from \"../../../actions/fetchSavedTag\";\nimport { clearTag } from \"../../../actions/clearTag\";\nimport { clearQuestions } from \"../../../actions/clearQuestions\";\n\nclass Tag extends React.Component {\n  componentDidMount() {\n    document.title = \"Questions by tag - StackStore\";\n    this.props.fetchSavedTag(this.props.user, this.props.match.params.tagSlug);\n  }\n\n  componentWillUnmount() {\n    this.props.clearTag();\n    this.props.clearQuestions();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>\n          Saved questions by tag{this.props.tag ? <>: {this.props.tag}</> : \"\"}\n        </h2>\n        {this.props.questions ? (\n          <SavedQuestionsAccordion questions={this.props.questions} />\n        ) : (\n          \"Loading questions\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    tag: state.tag,\n    questions: state.questions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSavedTag,\n  clearQuestions,\n  clearTag,\n})(Tag);\n","import { getBackendUrl } from \"../helpers/getBackendUrl\";\nimport { processSavedQuestionsData } from \"../helpers/processSavedQuestionsData\";\n\nexport const fetchSavedTag = (user, tagSlug) => {\n  return (dispatch) => {\n    fetch(`${getBackendUrl()}/users/${user.id}/tags/${tagSlug}`, {\n      method: \"GET\",\n      headers: {\n        token: user.token,\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          dispatch({ type: \"SET_TAG\", payload: json.tag });\n\n          const processedQuestions = processSavedQuestionsData(json);\n\n          dispatch({\n            type: \"FETCH_SAVED_QUESTIONS\",\n            payload: processedQuestions,\n          });\n        }\n      });\n  };\n};\n","export const clearTag = () => {\n  return (dispatch) => {\n    dispatch({ type: \"CLEAR_TAG\" });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { searchQuestions } from \"../../../actions/searchQuestions\";\n\nclass SearchInput extends React.Component {\n  state = {\n    query: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleClick = () => {\n    this.props.searchQuestions(this.state.query);\n  };\n\n  render() {\n    return (\n      <form id=\"search\" onSubmit={this.handleSubmit}>\n        <p>Search for questions from Stack Overflow by words in their title</p>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Keyword(s)\"\n          value={this.state.query}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <button\n          name=\"search\"\n          className=\"btn btn-primary\"\n          onClick={this.handleClick}\n        >\n          Search\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default connect(null, { searchQuestions })(SearchInput);\n","import { rekeyExternalQuestionData } from \"../helpers/rekeyExternalQuestionData\";\nimport { sortQuestions } from \"../helpers/sortQuestions\";\n\nexport const searchQuestions = (query) => {\n  return (dispatch) => {\n    dispatch({ type: \"SET_SEARCH_QUERY\", payload: query });\n    fetch(\n      `https://api.stackexchange.com/2.3/search?page=1&pagesize=20&order=desc&sort=activity&intitle=${query}&site=stackoverflow&filter=!SBqKECKMLIB-ijOvJS9H1*qxQqh7Evi_6BCJ0xoAl1DWJn*5.(Ks-p).sR*s9M_*`\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        const rekeyedQuestions = json.items.map((question) =>\n          rekeyExternalQuestionData(question)\n        );\n\n        const processedQuestions = sortQuestions(rekeyedQuestions);\n\n        dispatch({\n          type: \"SEARCH_QUESTIONS\",\n          payload: { ...json, items: processedQuestions },\n        });\n      });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport QuestionCard from \"../QuestionCard\";\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3>Search results</h3>\n        {this.props.searchResults && this.props.searchResults.length > 0 ? (\n          <>\n            <p>\n              Showing {this.props.searchResults.length} of{\" \"}\n              {this.props.searchResultsTotal} results for \"\n              {this.props.searchQuery}\"\n              {this.props.searchResults.length <\n              this.props.searchResultsTotal ? (\n                <>\n                  &nbsp;[\n                  <a\n                    href={`https://stackoverflow.com/search?q=${this.props.searchQuery}`}\n                    title=\"Search on Stack Overflow\"\n                  >\n                    view full results on Stack Overflow\n                  </a>\n                  ]\n                </>\n              ) : (\n                \"\"\n              )}\n            </p>\n            <div id=\"accordion\">\n              {this.props.searchResults.map((searchResult) => (\n                <QuestionCard question={searchResult} type={\"search\"} />\n              ))}\n            </div>\n          </>\n        ) : (\n          \"Loading or no results\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchQuery: state.searchQuery,\n    searchResults: state.searchResults,\n    searchResultsTotal: state.searchResultsTotal,\n  };\n};\n\nexport default connect(mapStateToProps)(SearchResults);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport SearchInput from \"./SearchInput\";\nimport SearchResults from \"./SearchResults\";\nimport { clearSearch } from \"../../../actions/clearSearch\";\n\nclass Search extends React.Component {\n  componentDidMount() {\n    document.title = \"Search - StackStore\";\n  }\n\n  componentWillUnmount() {\n    this.props.clearSearch();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Search</h2>\n        <SearchInput />\n        <br />\n        <SearchResults />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { clearSearch })(Search);\n","export const clearSearch = () => {\n  return (dispatch) => {\n    dispatch({ type: \"CLEAR_SEARCH\" });\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Home from \"./home/Home\";\nimport About from \"./About\";\nimport SavedQuestions from \"./savedQuestions/SavedQuestions\";\nimport EditQuesion from \"./editQuestion/EditQuestion\";\nimport Tags from \"./tags/Tags\";\nimport Tag from \"./tag/Tag\";\nimport Search from \"./search/Search\";\n\nclass Main extends React.Component {\n  render() {\n    const AuthRoute = ({ ...args }) => {\n      if (this.props.user) {\n        return <Route {...args} />;\n      } else {\n        return <Redirect to=\"/\" />;\n      }\n    };\n\n    return (\n      <main>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\">\n              {this.props.user ? <Redirect to=\"/questions\" /> : <Home />}\n            </Route>\n            <Route exact path=\"/about\" component={About} />\n            <AuthRoute exact path=\"/questions\" component={SavedQuestions} />\n            <AuthRoute\n              exact\n              path=\"/questions/:id/edit\"\n              component={EditQuesion}\n            />\n            <AuthRoute exact path=\"/tags\" component={Tags} />\n            <AuthRoute exact path=\"/tags/:tagSlug\" component={Tag} />\n            <AuthRoute exact path=\"/search\" component={Search} />\n          </Switch>\n        </div>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(Main);\n","const UserInfo = ({ email }) => {\n  return (\n    <li className=\"nav-item\">\n      <span className=\"navbar-text\">Logged in as {email}</span>\n    </li>\n  );\n};\n\nexport default UserInfo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport UserInfo from \"./UserInfo\";\n\nclass Footer extends React.Component {\n  render() {\n    const year = new Date().getFullYear();\n\n    return (\n      <footer>\n        <nav className=\"navbar navbar-light\">\n          <div className=\"container\">\n            <ul id=\"user-info\" className=\"navbar-nav d-none d-sm-block\">\n              {this.props.user ? (\n                <UserInfo email={this.props.user.email} />\n              ) : (\n                \"\"\n              )}\n            </ul>\n            <ul className=\"navbar-nav\" id=\"copyright\">\n              <li className=\"nav-item\">\n                <span className=\"navbar-text\">© Ynda Jas {year}</span>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </footer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(Footer);\n","import React from \"react\";\n\nimport \"./App.scss\";\nimport Header from \"./components/header/Header\";\nimport Main from \"./components/main/Main\";\nimport Footer from \"./components/footer/Footer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export default function rootReducer(state = {}, action) {\n  switch (action.type) {\n    // sessions\n    case \"LOG_IN\":\n      return { ...state, user: action.payload };\n    case \"LOG_OUT\":\n      return {};\n    // search\n    case \"SET_SEARCH_QUERY\":\n      return { ...state, searchQuery: action.payload };\n    case \"SEARCH_QUESTIONS\":\n      return {\n        ...state,\n        searchResults: action.payload.items,\n        searchResultsTotal: action.payload.total,\n      };\n    case \"CLEAR_SEARCH\":\n      const newStateCS = { ...state };\n      delete newStateCS.searchQuery;\n      delete newStateCS.searchResults;\n      delete newStateCS.searchResultsTotal;\n      delete newStateCS.savedQuestions;\n      return newStateCS;\n    case \"SAVE_QUESTION\":\n      if (state.savedQuestions) {\n        return {\n          ...state,\n          savedQuestions: [...state.savedQuestions, action.payload],\n        };\n      } else {\n        return { ...state, savedQuestions: [action.payload] };\n      }\n    // saved questions\n    case \"FETCH_SAVED_QUESTIONS\":\n      return { ...state, questions: action.payload };\n    case \"CLEAR_QUESTIONS\":\n      const newStateCQs = { ...state };\n      delete newStateCQs.questions;\n      return newStateCQs;\n    // saved question\n    case \"FETCH_SAVED_QUESTION\": // fall through\n    case \"UPDATE_QUESTION\":\n      return { ...state, question: action.payload };\n    case \"DELETE_QUESTION\":\n      return { ...state, question: { ...state.question, deleted: true } };\n    case \"CLEAR_QUESTION\":\n      const newStateCQ = { ...state };\n      delete newStateCQ.question;\n      return newStateCQ;\n    // saved tags\n    case \"FETCH_SAVED_TAGS\":\n      return { ...state, tags: action.payload };\n    case \"CLEAR_TAGS\":\n      const newStateCTs = { ...state };\n      delete newStateCTs.tags;\n      return newStateCTs;\n    // saved questions by tag\n    case \"SET_TAG\":\n      return { ...state, tag: action.payload };\n    case \"CLEAR_TAG\":\n      const newStateCT = { ...state };\n      delete newStateCT.tag;\n      return newStateCT;\n    default:\n      return state;\n  }\n}\n"],"sourceRoot":""}