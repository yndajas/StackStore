User.create!([
               { email: 'test@g.co', password_digest: '$2a$12$9Ciw84oK1GzpLkD86/PvDOoMiRiX4rWlvpEvk26QlSSsawwBLuF9G',
                 token: '_UVKUoQIAlCoElI0ndnSlw' }
             ])

Tag.create!([
              { text: 'react' },
              { text: 'redux' },
              { text: 'rails' },
              { text: 'api' },
              { text: 'store' },
              { text: 'javascript' },
              { text: 'sort' },
              { text: 'stackstore' },
              { text: 'ruby' },
              { text: 'strings' },
              { text: 'case' },
              { text: 'backend' },
              { text: 'environment' }
            ])

Question.create!([
                   { user_id: 1, stack_id: 55_253_235, score: 0, title: 'React + Redux + Rails losing store after switching the page',
                     body: "<p>I having an issue with the Redux store in getting <code>react_on_rails</code> where I want to switch the page and it doesn't work correctly for me. I am losing the redux store if I change the page or reload it.\nAlso, I am sorry for a pile of code I put, but I really don't know anything else or ways to fix it, the official docs for <code>react_on_rails</code> and redux did not help me and it more likely confuse me how it should work. if anyone has a clue how to make it work, in advance, thank you</p>\n\n<p>rootStore.js</p>\n\n<pre><code>import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport middleware from 'redux-thunk';\n\nimport reducers from '../reducers';\n\nexport default (props, railsContext) =&gt; {\n  // eslint-disable-next-line no-param-reassign\n  delete props.prerender;\n  const combinedReducer = combineReducers(reducers);\n  const newProps = { ...props, railsContext };\n  return applyMiddleware(middleware)(createStore)(combinedReducer, newProps);\n};\n</code></pre>\n\n<p>reducers/index.js</p>\n\n<pre><code>import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport cartReducer from './cartReducer';\n\nconst rootReducer = combineReducers({\n  routing: routerReducer,\n  cart: cartReducer,\n});\n\nexport default rootReducer;\n</code></pre>\n\n<p>the component that I am trying to do magic with</p>\n\n<pre><code>// @flow\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart} from '../actions/setCart';\nimport styles from './AddToCart.module.scss';\n\ntype Props = {\n  productId: number,\n}\n\ntype State = {}\n\nclass AddToCart extends React.Component&lt;Props, State&gt; {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onClick = () =&gt; {\n    console.log(this.props.productId);\n    this.props.addToCart(this.props.productId);\n  };\n\n  render() {\n    console.log('this.props.cart', this.props.cart);\n\n    return &lt;button\n      onClick={this.onClick}\n      className={styles.button}\n    &gt;Add To Cart&lt;/button&gt;;\n  }\n}\n\nconst AddToCartRedux = connect(\n  state =&gt; ({\n    cart: state.cart,\n  }),\n  dispatch =&gt; ({\n    addToCart: id =&gt; {\n      dispatch(addToCart(id));\n    },\n  }),\n)(AddToCart);\n\nexport default AddToCartRedux;\n</code></pre>\n\n<p>my entry point</p>\n\n<pre><code>import ReactOnRails from 'react-on-rails';\nimport ProductDetailPage from '../pages/ProductDetailPage';\nimport rootStore from '../store/rootStore';\nReactOnRails.setOptions({\n  traceTurbolinks: true,\n});\nReactOnRails.register({ProductDetailPage});\nReactOnRails.registerStore({rootStore});\n</code></pre>\n\n<p>my layout application</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\"&gt;\n  &lt;%= csrf_meta_tags %&gt;\n  &lt;%= csp_meta_tag %&gt;\n\n  &lt;%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %&gt;\n  &lt;%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;%= notice %&gt;\n&lt;%= alert %&gt;\n&lt;%= redux_store('rootStore', props: {}) %&gt;\n&lt;%= react_component('ProductDetailPage', props: {product: @product.id}) %&gt;\n&lt;%= yield %&gt;\n\n&lt;%= redux_store_hydration_data %&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n", stack_created: '2019-03-20 03:41:59', stack_updated: '2019-03-20 04:06:14', notes: 'redux-persist is the solution used on StackStore' },
                   { user_id: 1, stack_id: 6_712_034, score: 880, title: 'Sort array by firstname (alphabetically) in Javascript',
                     body: "<p>I got an array (see below for one object in the array) that I need to sort by firstname using JavaScript.\nHow can I do it?</p>\n\n<pre><code>var user = {\n   bio: null,\n   email:  \"user@domain.com\",\n   firstname: \"Anna\",\n   id: 318,\n   lastAvatar: null,\n   lastMessage: null,\n   lastname: \"Nickson\",\n   nickname: \"anny\"\n};\n</code></pre>\n", stack_created: '2011-07-15 19:10:55', stack_updated: '2021-05-29 04:33:00', notes: 'adapted accepted answer for use on StackStore' },
                   { user_id: 1, stack_id: 1_020_568, score: 1162, title: 'How to convert a string to lower or upper case in Ruby',
                     body: "<p>How do I take a string and convert it to lower or upper case in Ruby?</p>\n", stack_created: '2009-06-20 00:16:00', stack_updated: '2021-07-13 21:30:47', notes: nil },
                   { user_id: 1, stack_id: 51_024_542, score: 35, title: 'How to inject API server URL when deploying react frontend?',
                     body: "<p><em>Disclaimer</em>: I am a React noob so perhaps what I am trying to do is not the <em>React Way</em></p>\n\n<p>I am writing a React front-end that will be deployed to be served statically by some cloud provider, e.g. S3 or Google Storage or whatever. This front-end interacts with several API servers that live somewhere in the cloud, maybe in the same provider, maybe not. Furthermore, while developing the UI or part of it, those servers' addresses might be local or testing instances.</p>\n\n<p>How do I inject the API server(s) URLs into my react application in a flexible so that I can deploy in dev, staging or prod using different addresses?</p>\n\n<p><strong>SOLUTION</strong>: I finally ended up using a combination of solutions proposed:</p>\n\n<ul>\n<li>use <code>.env.production</code> and <code>.env.development</code> files (exact names) to store the variable <code>REACT_APP_API_URI = 'host'</code></li>\n<li>this is automatically picked-up by create-react-app's build scaffolding and available in UI code as <code>process.env.REACT_APP_API_URI</code></li>\n</ul>\n\n<p>Note this somewhat goes against principles from <a href=\"https://12factor.net/config\" rel=\"noreferrer\">12 Factor Apps</a>, e.g. storing env variables in files in version control but it does the job ATM.</p>\n", stack_created: '2018-06-25 13:22:51', stack_updated: '2021-05-31 05:40:29', notes: 'adapted accepted answer for use on StackStore' }
                 ])

Answer.create!([
                 { user_id: 1, question_id: 2, stack_id: 6_712_080, stack_question_id: 6_712_034, accepted: true, score: 1331,
                   body: "<p>Suppose you have an array <code>users</code>. You may use <code>users.sort</code> and pass a function that takes two arguments and compare them (comparator)</p>\n<p>It should return</p>\n<ul>\n<li>something negative if first argument is less than second (should be placed before the second in resulting array)</li>\n<li>something positive if first argument is greater (should be placed after second one)</li>\n<li>0 if those two elements are equal.</li>\n</ul>\n<p>In our case if two elements are <code>a</code> and <code>b</code> we want to compare <code>a.firstname</code> and <code>b.firstname</code></p>\n<p>Example:</p>\n<pre><code>users.sort(function(a, b){\n    if(a.firstname &lt; b.firstname) { return -1; }\n    if(a.firstname &gt; b.firstname) { return 1; }\n    return 0;\n})\n</code></pre>\n<p>This code is going to work with any type.</p>\n<p>Note that in &quot;real life&quot;™ you often want to ignore case, correctly sort diacritics, weird symbols like ß, etc when you compare strings, so you may want to use <code>localeCompare</code>. See other answers for clarity.</p>\n", stack_created: '2011-07-15 19:15:42', stack_updated: '2021-05-29 04:31:19', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 45_544_166, stack_question_id: 6_712_034, accepted: nil, score: 1124,
                   body: "<p>Shortest possible code with ES6!</p>\n<pre><code>users.sort((a, b) =&gt; a.firstname.localeCompare(b.firstname))\n</code></pre>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare#Browser_compatibility\" rel=\"noreferrer\">String.prototype.localeCompare()</a> basic support is universal!</p>\n", stack_created: '2017-08-07 09:56:25', stack_updated: '2021-05-29 04:33:00', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 6_712_058, stack_question_id: 6_712_034, accepted: nil, score: 369,
                   body: "<p>Something like this:</p>\n\n<pre><code>array.sort(function(a, b){\n var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase();\n if (nameA &lt; nameB) //sort string ascending\n  return -1;\n if (nameA &gt; nameB)\n  return 1;\n return 0; //default return value (no sorting)\n});\n</code></pre>\n", stack_created: '2011-07-15 19:13:25', stack_updated: '2017-01-24 13:24:44', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 16_481_400, stack_question_id: 6_712_034, accepted: nil, score: 368,
                   body: "<p>If compared strings contain unicode characters you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\"><code>localeCompare</code> function</a> of <code>String</code> class like the following:</p>\n\n<pre><code>users.sort(function(a,b){\n    return a.firstname.localeCompare(b.firstname);\n})\n</code></pre>\n", stack_created: '2013-05-10 11:39:54', stack_updated: '2013-07-06 05:49:31', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 42_478_664, stack_question_id: 6_712_034, accepted: nil, score: 41,
                   body: "<p>Nice little ES6 one liner:</p>\n\n<pre><code>users.sort((a, b) =&gt; a.firstname !== b.firstname ? a.firstname &lt; b.firstname ? -1 : 1 : 0);\n</code></pre>\n", stack_created: '2017-02-27 05:51:35', stack_updated: '2017-06-16 01:33:23', notes: nil },
                 { user_id: 1, question_id: 1, stack_id: 55_253_444, stack_question_id: 55_253_235, accepted: nil, score: 1,
                   body: "<p>Since the Redux store is initialized when you load a page, navigating to a new page or reloading the page will cause all your JS assets to reload and re-initialize, causing your store to reset. </p>\n\n<p>If you want to change the browser's location without a page reload, you would need to use something like <a href=\"https://github.com/ReactTraining/react-router\" rel=\"nofollow noreferrer\">react-router</a> to handle navigation between React components instead of going through a full request/response cycle with the Rails server.</p>\n", stack_created: '2019-03-20 04:06:14', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 49_264_970, stack_question_id: 6_712_034, accepted: nil, score: 36,
                   body: "<p>We can use localeCompare but need to check the keys as well for falsey values</p>\n\n<p>The code below will not work if one entry has missing lname.</p>\n\n<pre><code>obj.sort((a, b) =&gt; a.lname.localeCompare(b.lname))\n</code></pre>\n\n<p>So we need to check for falsey value like below</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let obj=[\r\n{name:'john',lname:'doe',address:'Alaska'},\r\n{name:'tom',lname:'hopes',address:'California'},\r\n{name:'harry',address:'Texas'}\r\n]\r\nlet field='lname';\r\nconsole.log(obj.sort((a, b) =&gt; (a[field] || \"\").toString().localeCompare((b[field] || \"\").toString())));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>OR </p>\n\n<p>we can use lodash , its very simple.  It will detect the returned values i.e whether number or string and do sorting accordingly . </p>\n\n<pre><code>import sortBy from 'lodash/sortBy';\nsortBy(obj,'name')\n</code></pre>\n\n<p><a href=\"https://lodash.com/docs/4.17.5#sortBy\" rel=\"noreferrer\">https://lodash.com/docs/4.17.5#sortBy</a></p>\n", stack_created: '2018-03-13 20:05:04', stack_updated: '2018-03-21 23:15:53', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 18_493_652, stack_question_id: 6_712_034, accepted: nil, score: 21,
                   body: "<p><a href=\"http://underscorejs.org/#sortBy\">underscorejs</a> offers the very nice _.sortBy function:</p>\n\n<pre><code>_.sortBy([{a:1},{a:3},{a:2}], \"a\")\n</code></pre>\n\n<p>or you can use a custom sort function:</p>\n\n<pre><code>_.sortBy([{a:\"b\"},{a:\"c\"},{a:\"a\"}], function(i) {return i.a.toLowerCase()})\n</code></pre>\n", stack_created: '2013-08-28 16:41:19', stack_updated: '2013-11-18 07:49:30', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 25_831_948, stack_question_id: 6_712_034, accepted: nil, score: 17,
                   body: "<p>A more compact notation:</p>\n\n<pre><code>user.sort(function(a, b){\n    return a.firstname === b.firstname ? 0 : a.firstname &lt; b.firstname ? -1 : 1;\n})\n</code></pre>\n", stack_created: '2014-09-14 09:36:03', stack_updated: '2019-03-18 15:40:40', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 51_897_069, stack_question_id: 6_712_034, accepted: nil, score: 17,
                   body: "<p>In case we are sorting names or something with special characters, like <strong>ñ</strong> or <strong>áéíóú</strong> (commons in Spanish) we could use the params <strong>locales</strong> (<em>es</em> for spanish in this case ) and <strong>options</strong> like this:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let user = [{'firstname': 'Az'},{'firstname': 'Áb'},{'firstname':'ay'},{'firstname': 'Ña'},{'firstname': 'Nz'},{'firstname': 'ny'}];\r\n\r\n\r\nuser.sort((a, b) =&gt; a.firstname.localeCompare(b.firstname, 'es', {sensitivity: 'base'}))\r\n\r\n\r\nconsole.log(user)</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>The oficial locale options could be found here in <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noreferrer\">iana</a>, es (spanish), de (German), fr (French). About <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare#Parameters\" rel=\"noreferrer\">sensitivity</a> <strong>base</strong> means: </p>\n\n<blockquote>\n  <p>Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.</p>\n</blockquote>\n", stack_created: '2018-08-17 14:01:28', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 49_448_585, stack_question_id: 6_712_034, accepted: nil, score: 10,
                   body: "<p>Inspired from <a href=\"https://stackoverflow.com/a/18920254/872188\">this</a> answer,</p>\n\n<pre><code>users.sort((a,b) =&gt; (a.firstname  - b.firstname));\n</code></pre>\n", stack_created: '2018-03-23 11:24:43', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 6_712_220, stack_question_id: 6_712_034, accepted: nil, score: 9,
                   body: "<p>Basically you can sort arrays with method sort, but if you want to sort objects then you have to pass function to sort method of array, so I will give you an example using your array</p>\n\n<pre><code>user = [{\nbio: \"&lt;null&gt;\",\nemail: \"user@domain.com\",\nfirstname: 'Anna',\nid: 318,\n\"last_avatar\": \"&lt;null&gt;\",\n\"last_message\": \"&lt;null&gt;\",\nlastname: 'Nickson',\nnickname: 'anny'\n},\n{\nbio: \"&lt;null&gt;\",\nemail: \"user@domain.com\",\nfirstname: 'Senad',\nid: 318,\n\"last_avatar\": \"&lt;null&gt;\",\n\"last_message\": \"&lt;null&gt;\",\nlastname: 'Nickson',\nnickname: 'anny'\n},\n{\nbio: \"&lt;null&gt;\",\nemail: \"user@domain.com\",\nfirstname: 'Muhamed',\nid: 318,\n\"last_avatar\": \"&lt;null&gt;\",\n\"last_message\": \"&lt;null&gt;\",\nlastname: 'Nickson',\nnickname: 'anny'\n}];\n\nvar ar = user.sort(function(a, b)\n{\n  var nA = a.firstname.toLowerCase();\n  var nB = b.firstname.toLowerCase();\n\n  if(nA &lt; nB)\n    return -1;\n  else if(nA &gt; nB)\n    return 1;\n return 0;\n});\n</code></pre>\n", stack_created: '2011-07-15 19:30:38', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 55_915_952, stack_question_id: 6_712_034, accepted: nil, score: 7,
                   body: "<p>try</p>\n\n<pre><code>users.sort((a,b)=&gt; (a.firstname&gt;b.firstname)*2-1)\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var users = [\r\n  { firstname: \"Kate\", id: 318, /*...*/ },\r\n  { firstname: \"Anna\", id: 319, /*...*/ },\r\n  { firstname: \"Cristine\", id: 317, /*...*/ },\r\n]\r\n\r\nconsole.log(users.sort((a,b)=&gt; (a.firstname&gt;b.firstname)*2-1) );</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", stack_created: '2019-04-30 07:33:13', stack_updated: '2019-04-30 08:08:15', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 64_289_341, stack_question_id: 6_712_034, accepted: nil, score: 7,
                   body: "<p>I'm surprised no one mentioned Collators. You shouldn't use <code>localeCompare</code> unless you have to as it has significantly worse performance.</p>\n<pre><code>const collator = new Intl.Collator('zh-CN'); // Chinese Simplified for example\n\nfunction sortAsc(a, b) {\n  if (typeof a === 'string' &amp;&amp; typeof b === 'string') {\n    return collator.compare(b, a)\n  }\n\n  return b - a;\n}\n\nfunction sortDesc(a, b) {\n  if (typeof a === 'string' &amp;&amp; typeof b === 'string') {\n    return collator.compare(a, b);\n  }\n\n  return a - b;\n}\n</code></pre>\n", stack_created: '2020-10-10 02:16:19', stack_updated: '2021-03-01 03:00:59', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 51_362_628, stack_question_id: 6_712_034, accepted: nil, score: 6,
                   body: "<p>also for both asec and desc sort, u can use this :\nsuppose we have a variable <em>SortType</em> that specify ascending sort or descending sort you want:</p>\n\n<pre><code> users.sort(function(a,b){\n            return   sortType===\"asc\"? a.firstName.localeCompare( b.firstName): -( a.firstName.localeCompare(  b.firstName));\n        })\n</code></pre>\n", stack_created: '2018-07-16 13:09:43', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 54_346_887, stack_question_id: 6_712_034, accepted: nil, score: 6,
                   body: "<p>A generalized function can be written like below</p>\n\n<pre><code>    function getSortedData(data, prop, isAsc) {\n        return data.sort((a, b) =&gt; (a[prop] &lt; b[prop] ? -1 : 1) * (isAsc ? 1 : -1));\n   }\n</code></pre>\n\n<p>you can pass the below parameters</p>\n\n<ol>\n<li>The data which you want to sort</li>\n<li>The property in the data by it should be sorted</li>\n<li>The last parameter is of boolean type. It checks if you want to sort by ascending or by descending </li>\n</ol>\n", stack_created: '2019-01-24 12:38:06', stack_updated: '2019-02-19 14:15:32', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 48_398_240, stack_question_id: 6_712_034, accepted: nil, score: 3,
                   body: "<p>in simply words you can use this method</p>\n\n<pre><code>users.sort(function(a,b){return a.firstname &lt; b.firstname ? -1 : 1});\n</code></pre>\n", stack_created: '2018-01-23 09:29:05', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 48_612_512, stack_question_id: 6_712_034, accepted: nil, score: 3,
                   body: "<p>You can use this for objects</p>\n\n<pre><code>transform(array: any[], field: string): any[] {\nreturn array.sort((a, b) =&gt; a[field].toLowerCase() !== b[field].toLowerCase() ? a[field].toLowerCase() &lt; b[field].toLowerCase() ? -1 : 1 : 0);}\n</code></pre>\n", stack_created: '2018-02-04 20:09:19', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 35_655_723, stack_question_id: 6_712_034, accepted: nil, score: 2,
                   body: "<p>Pushed the top answers into a prototype to sort by key.</p>\n\n<pre><code>Array.prototype.alphaSortByKey= function (key) {\n    this.sort(function (a, b) {\n        if (a[key] &lt; b[key])\n            return -1;\n        if (a[key] &gt; b[key])\n            return 1;\n        return 0;\n    });\n    return this;\n};\n</code></pre>\n", stack_created: '2016-02-26 15:33:44', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 60_168_988, stack_question_id: 6_712_034, accepted: nil, score: 2,
                   body: "<p>Just for the record, if you want to have a named sort-function, the syntax is as follows: </p>\n\n<pre><code>let sortFunction = (a, b) =&gt; {\n if(a.firstname &lt; b.firstname) { return -1; }\n if(a.firstname &gt; b.firstname) { return 1; }\n return 0;\n})\nusers.sort(sortFunction)\n</code></pre>\n\n<p>Note that the following does NOT work: </p>\n\n<pre><code>users.sort(sortFunction(a,b))\n</code></pre>\n", stack_created: '2020-02-11 12:39:36', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 30_552_560, stack_question_id: 6_712_034, accepted: nil, score: 1,
                   body: "<p>You can use the in-built array method - <code>sort</code>. This method takes a callback method as a param</p>\n\n<pre>\n<code>\n\n    // custom sort function to be passed as param/callback to the Array's sort method\n    function myCustomSort(a, b) {\n        return (a.toLowerCase() > b.toLowerCase()) ? 1 : -1;\n    }\n\n    // Actual method to be called by entity that needs sorting feature\n    function sortStrings() {\n        var op = Array.prototype.sort.call(arguments, myCustomSort);\n    }\n\n    // Testing the implementation\n    var sortedArray = sortStrings(\"Burger\", \"Mayo1\", \"Pizza\", \"boxes\", \"Apples\", \"Mayo\");\n    console.log(sortedArray); //[\"Apples\", \"boxes\", \"Burger\", \"Mayo\", \"Mayo1\", \"Pizza\"]\n\n</code>\n</pre>\n\n<p>Key Points to be noted for understanding this code.</p>\n\n<ol>\n<li>The custom method, in this case, <code>myCustomSort</code>, should return +1 or -1 for each element pair(from the input array) comparison.</li>\n<li>Use <code>toLowerCase()</code>/<code>toUpperCase()</code> in the custom sorting callback method so that case difference does not affect the correctness of the sorting process.</li>\n</ol>\n\n<p>I hope this is clear enough explanation. Feel free to comment if you think, more info is needed. </p>\n\n<p>Cheers!</p>\n", stack_created: '2015-05-31 00:07:34', stack_updated: '2015-06-06 23:51:52', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 32_564_565, stack_question_id: 6_712_034, accepted: nil, score: 0,
                   body: "<p>You can use something similar, to get rid of <strong>case sensitive</strong> </p>\n\n<pre><code>users.sort(function(a, b){\n\n  //compare two values\n  if(a.firstname.toLowerCase() &lt; b.firstname.toLowerCase()) return -1;\n  if(a.firstname.toLowerCase() &gt; b.firstname.toLowerCase()) return 1;\n  return 0;\n\n})\n</code></pre>\n", stack_created: '2015-09-14 12:16:04', stack_updated: '2015-09-14 12:42:51', notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 58_606_810, stack_question_id: 6_712_034, accepted: nil, score: 0,
                   body: "<p>My implementation, works great in older ES versions:</p>\n\n<pre><code>sortObject = function(data) {\n    var keys = Object.keys(data);\n    var result = {};\n\n    keys.sort();\n\n    for(var i = 0; i &lt; keys.length; i++) {\n        var key = keys[i];\n\n        result[key] = data[key];\n    }\n\n    return result;\n};\n</code></pre>\n", stack_created: '2019-10-29 11:44:28', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 2, stack_id: 64_516_070, stack_question_id: 6_712_034, accepted: nil, score: 0,
                   body: "<p>for a two factors sort (name and lastname):</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>users.sort((a, b) =&gt; a.name.toLowerCase() &lt; b.name.toLowerCase() ? -1 : a.name.toLowerCase() &gt; b.name.toLowerCase() ? 1 : a.lastname.toLowerCase() &lt; b.lastname.toLowerCase() ? -1 : a.lastname.toLowerCase() &gt; b.lastname.toLowerCase() ? 1 : 0)</code></pre>\r\n</div>\r\n</div>\r\n</p>\n", stack_created: '2020-10-24 17:14:02', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 1_020_571, stack_question_id: 1_020_568, accepted: true, score: 1669,
                   body: "<p>Ruby has a few methods for changing the case of strings. To convert to lowercase, use <code>downcase</code>:</p>\n<pre><code>&quot;hello James!&quot;.downcase    #=&gt; &quot;hello james!&quot;\n</code></pre>\n<p>Similarly, <code>upcase</code> capitalizes every letter and <code>capitalize</code> capitalizes the first letter of the string but lowercases the rest:</p>\n<pre><code>&quot;hello James!&quot;.upcase      #=&gt; &quot;HELLO JAMES!&quot;\n&quot;hello James!&quot;.capitalize  #=&gt; &quot;Hello james!&quot;\n&quot;hello James!&quot;.titleize    #=&gt; &quot;Hello James!&quot; (Rails/ActiveSupport only)\n</code></pre>\n<p>If you want to modify a string in place, you can add an exclamation point to any of those methods:</p>\n<pre><code>string = &quot;hello James!&quot;\nstring.downcase!\nstring   #=&gt; &quot;hello james!&quot;\n</code></pre>\n<p>Refer to the <a href=\"http://www.ruby-doc.org/core/String.html\" rel=\"noreferrer\">documentation for String</a> for more information.</p>\n", stack_created: '2009-06-20 00:16:55', stack_updated: '2021-07-13 21:30:47', notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 1_021_299, stack_question_id: 1_020_568, accepted: nil, score: 127,
                   body: "<p>You can find out all the methods available on a String by opening irb and running:</p>\n\n<pre><code>\"MyString\".methods.sort\n</code></pre>\n\n<p>And for a list of the methods available for strings in particular:</p>\n\n<pre><code>\"MyString\".own_methods.sort\n</code></pre>\n\n<p>I use this to find out new and interesting things about objects which I might not otherwise have known existed.</p>\n", stack_created: '2009-06-20 09:27:57', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 16_098_006, stack_question_id: 1_020_568, accepted: nil, score: 41,
                   body: "<p>Like @endeR mentioned, if internationalization is a concern, the unicode_utils gem is more than adequate.</p>\n\n<pre><code>$ gem install unicode_utils\n$ irb\n&gt; require 'unicode_utils'\n=&gt; true\n&gt; UnicodeUtils.downcase(\"FEN BİLİMLERİ\", :tr)\n=&gt; \"fen bilimleri\"\n</code></pre>\n\n<hr>\n\n<p>String manipulations  in Ruby 2.4 are now unicode-sensitive.</p>\n", stack_created: '2013-04-19 05:46:31', stack_updated: '2016-08-22 17:50:32', notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 1_020_570, stack_question_id: 1_020_568, accepted: nil, score: 21,
                   body: "<p>The ruby <code>downcase</code> method returns a string with its uppercase letters replaced by lowercase letters.</p>\n\n<pre><code>\"string\".downcase\n</code></pre>\n\n<p><a href=\"https://ruby-doc.org/core-2.1.0/String.html#method-i-downcase\" rel=\"noreferrer\">https://ruby-doc.org/core-2.1.0/String.html#method-i-downcase</a></p>\n", stack_created: '2009-06-20 00:16:52', stack_updated: '2018-04-28 05:40:59', notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 1_021_280, stack_question_id: 1_020_568, accepted: nil, score: 14,
                   body: "<p>... and the uppercase is:</p>\n\n<pre><code>\"Awesome String\".upcase\n=&gt; \"AWESOME STRING\"\n</code></pre>\n", stack_created: '2009-06-20 09:10:17', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 25_090_224, stack_question_id: 1_020_568, accepted: nil, score: 14,
                   body: "<p>The  Rails Active Support gem provides <code>upcase</code>, <code>downcase</code>, <code>swapcase</code>,<code>capitalize</code>, etc. methods with internationalization support:</p>\n\n<pre><code>gem install activesupport\nirb -ractive_support/core_ext/string\n\"STRING  ÁÂÃÀÇÉÊÍÓÔÕÚ\".mb_chars.downcase.to_s\n =&gt; \"string  áâãàçéêíóôõú\"\n\"string  áâãàçéêíóôõú\".mb_chars.upcase.to_s\n=&gt; \"STRING  ÁÂÃÀÇÉÊÍÓÔÕÚ\"\n</code></pre>\n", stack_created: '2014-08-01 23:44:24', stack_updated: '2016-03-09 23:48:25', notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 56_359_510, stack_question_id: 1_020_568, accepted: nil, score: 4,
                   body: "<p>The <strong>.swapcase</strong> method transforms the uppercase latters in a string to lowercase and the lowercase letters to uppercase.</p>\n\n<pre><code>'TESTING'.swapcase #=&gt; testing\n'testing'.swapcase #=&gt; TESTING\n</code></pre>\n", stack_created: '2019-05-29 11:26:13', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 54_420_908, stack_question_id: 1_020_568, accepted: nil, score: 2,
                   body: "<p>You can find strings method like <code>\"strings\".methods</code>\nYou can define string as <code>upcase</code>, <code>downcase</code>, <code>titleize</code>.\nFor Example,</p>\n\n<pre><code>\"hii\".downcase\n\"hii\".titleize\n\"hii\".upcase\n</code></pre>\n", stack_created: '2019-01-29 12:18:06', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 46_282_446, stack_question_id: 1_020_568, accepted: nil, score: 1,
                   body: "<p>Since Ruby 2.4 there is a built in <a href=\"https://github.com/ruby/ruby/blob/v2_4_0_preview3/string.c#L6083-L6131\" rel=\"nofollow noreferrer\">full Unicode case mapping</a>. Source: <a href=\"https://stackoverflow.com/a/38016153/888294\">https://stackoverflow.com/a/38016153/888294</a>. See Ruby 2.4.0 documentation for details: <a href=\"https://ruby-doc.org/core-2.4.0/String.html#method-i-downcase\" rel=\"nofollow noreferrer\">https://ruby-doc.org/core-2.4.0/String.html#method-i-downcase</a></p>\n", stack_created: '2017-09-18 14:57:42', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 58_530_455, stack_question_id: 1_020_568, accepted: nil, score: 1,
                   body: "<p>Won't work for every, but this just saved me a bunch of time. I just had the problem with a CSV returning \"TRUE or \"FALSE\" so I just added VALUE.to_s.downcase == \"true\" which will return the boolean true if the value is \"TRUE\" and false if the value is \"FALSE\", but will still work for the boolean true and false.</p>\n", stack_created: '2019-10-23 20:20:11', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 3, stack_id: 63_226_116, stack_question_id: 1_020_568, accepted: nil, score: 0,
                   body: "<p>In combination with <code>try</code> method, to support <code>nil</code> value:</p>\n<pre><code>'string'.try(:upcase)\n'string'.try(:capitalize)\n'string'.try(:titleize)\n</code></pre>\n", stack_created: '2020-08-03 08:29:23', stack_updated: '2020-08-03 08:53:21', notes: nil },
                 { user_id: 1, question_id: 4, stack_id: 51_024_624, stack_question_id: 51_024_542, accepted: true, score: 20,
                   body: "<p>you can try this</p>\n\n<pre><code>if(process.env.NODE_ENV === 'development') {\n  url = 'https://google.com'\n}\n\nif(process.env.NODE_ENV === 'production') {\n  url = 'https://stackoverflow.com/'\n}\n</code></pre>\n", stack_created: '2018-06-25 13:26:47', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 4, stack_id: 51_025_138, stack_question_id: 51_024_542, accepted: nil, score: 4,
                   body: "<p>Using this package <a href=\"https://github.com/toddbluhm/env-cmd\" rel=\"nofollow noreferrer\">https://github.com/toddbluhm/env-cmd</a> you could create an env file for your environment</p>\n<p>for example create .env.staging and .env file with this code</p>\n<pre><code>// .env.staging file   \nAPI_URL=https://staging.url.com/api/\n</code></pre>\n<pre><code>// .env file\nAPI_URL=https://url.com/api/\n</code></pre>\n<p>How to fetch with API_URL from env variable:</p>\n<pre><code>fetch(process.env.API_URL)\n</code></pre>\n<p>Then you can just add some extra scripts in your package.json:</p>\n<pre><code>{\n  &quot;scripts&quot;: {\n    &quot;build:staging&quot;: &quot;env-cmd .env.staging yarn build&quot;,\n    &quot;build:prod&quot;: &quot;env-cmd .env yarn build&quot;\n  }\n}\n</code></pre>\n", stack_created: '2018-06-25 13:51:39', stack_updated: '2021-05-31 05:40:29', notes: nil },
                 { user_id: 1, question_id: 4, stack_id: 51_024_830, stack_question_id: 51_024_542, accepted: nil, score: 3,
                   body: "<p>You can use <code>.env</code> file if the API's are constant for <code>development</code> or <code>production</code> environment. after <code>build</code> you can't change these parameters.<br/></p>\n\n<p>If you want to change the <code>URL</code> after build, add a <code>js</code> file lets say <code>config.js</code>\n<br/></p>\n\n<p>Include the <code>conf.js</code> in <code>index.html</code>\n<br/></p>\n\n<p>Add <code>URL</code> in <code>conf.js</code> like</p>\n\n<pre><code>var URL1 = 'https://www.google.com'\n</code></pre>\n\n<p>You can access the parameter like :</p>\n\n<pre><code>export const {URL1} = window;\n</code></pre>\n", stack_created: '2018-06-25 13:36:31', stack_updated: nil, notes: nil },
                 { user_id: 1, question_id: 4, stack_id: 51_024_731, stack_question_id: 51_024_542, accepted: nil, score: 2,
                   body: "<p>You can do that making use of environment variables on the build step for example.</p>\n\n<p>You can use something like <a href=\"https://github.com/motdotla/dotenv\" rel=\"nofollow noreferrer\">.env</a> that allows you to define environment variables and load them on your webpack file for example (assuming you use webpack). But you can really use it with any bundler.</p>\n\n<p>.env file:</p>\n\n<pre><code>API=http://localhost:3000\n</code></pre>\n\n<p>On your webpack you could make use of the <a href=\"https://webpack.js.org/plugins/define-plugin/\" rel=\"nofollow noreferrer\">DefinePlugin</a></p>\n\n<p>example taken from docs: add your API env</p>\n\n<pre><code>    ...\n    require('dotenv').config()\n    ...\n\n    new webpack.DefinePlugin({\n      API_ENDPOINT: process.env.API,\n      PRODUCTION: JSON.stringify(true),\n      VERSION: JSON.stringify('5fa3b9'),\n      BROWSER_SUPPORTS_HTML5: true,\n      TWO: '1+1',\n      'typeof window': JSON.stringify('object')\n    });\n</code></pre>\n\n<p>Anyway, this is just one way. I like this way because it makes my project ready for defining API keys and other useful stuff for different environments.</p>\n\n<p><strong>NOTE: You can even define different .env files for local, staging and production and load the respective one in the webpack depending on the build type.</strong></p>\n", stack_created: '2018-06-25 13:31:31', stack_updated: nil, notes: nil }
               ])
QuestionTag.create!([
                      { question_id: 1, tag_id: 1 },
                      { question_id: 1, tag_id: 3 },
                      { question_id: 1, tag_id: 5 },
                      { question_id: 2, tag_id: 6 },
                      { question_id: 2, tag_id: 7 },
                      { question_id: 2, tag_id: 8 },
                      { question_id: 1, tag_id: 8 },
                      { question_id: 3, tag_id: 9 },
                      { question_id: 3, tag_id: 10 },
                      { question_id: 3, tag_id: 11 },
                      { question_id: 4, tag_id: 8 },
                      { question_id: 4, tag_id: 4 },
                      { question_id: 4, tag_id: 12 },
                      { question_id: 4, tag_id: 13 },
                      { question_id: 4, tag_id: 1 },
                      { question_id: 1, tag_id: 2 }
                    ])
